{"is_source_file": true, "format": "Dart", "description": "This file defines a Debouncer class that provides functionality to debounce repeated calls by delaying the execution until a period of inactivity passes. It manages timer-based scheduling to prevent frequent calls from triggering actions multiple times within a short timeframe.", "external_files": [], "external_methods": [], "published": ["Debouncer"], "classes": [{"name": "Debouncer", "description": "A class designed to debounce frequent calls by scheduling a delayed execution of a callback function, cancelling previous schedules if a new call occurs within the delay period."}], "methods": [{"name": "Debouncer", "description": "Constructor initializing the Debouncer with an optional delay duration, defaulting to 350 milliseconds."}, {"name": "run", "description": "Schedules the provided callback to execute after the specified delay, cancelling any previously scheduled calls."}, {"name": "dispose", "description": "Cancels any pending scheduled actions and cleans up resources."}], "calls": ["Timer", "Timer.cancel"], "search-terms": ["debouncer", "debounce", "Timer", "delay", "schedule", "cancel"], "state": 2, "file_id": 23, "knowledge_revision": 53, "git_revision": "", "hash": "2869e37b6c188e5dd09172a62dd0a714", "format-version": 4, "code-base-name": "notes_app_frontend", "filename": "notes_app_frontend/lib/utils/debouncer.dart", "revision_history": [{"53": ""}]}